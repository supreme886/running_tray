name: Build and Release

on:
  push:
    tags:
      - 'v*'  # ÂΩìÊé®ÈÄÅÁ±ª‰ººv1.0.0ÁöÑÊ†áÁ≠æÊó∂Ëß¶Âèë

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        qt-version: '6.5.0'
        arch: 'win64_msvc2019_64'
        
    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    - name: Build and package
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        package.bat
        
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-release
        path: ./running-tray_release.zip

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        qt-version: '6.5.0'
        arch: 'clang_64'
        
    - name: Install CMake
      uses: lukka/get-cmake@latest
      
    - name: Create scripts directory
      run: mkdir -p scripts
      
    - name: Make build script executable
      run: chmod +x scripts/build_dmg.sh
      
    - name: Build DMG
      run: ./scripts/build_dmg.sh
      env:
        GITHUB_REF_NAME: ${{ github.ref_name }}
        
    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos-release
        path: ./*.dmg

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Windows Artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-release
        path: ./windows/
        
    - name: Download macOS Artifact
      uses: actions/download-artifact@v3
      with:
        name: macos-release
        path: ./macos/
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## üöÄ Release ${{ github.ref_name }}
          
          ### üì¶ Downloads
          - **Windows**: running-tray_windows_x64.zip
          - **macOS**: Running-Tray-${{ github.ref_name }}.dmg
          
          ### üîß Installation
          **Windows**: Extract the zip file and run the executable
          **macOS**: Download the DMG, open it, and drag the app to Applications folder
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows/running-tray_release.zip
        asset_name: running-tray_windows_x64.zip
        asset_content_type: application/zip
        
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macos/Running-Tray-${{ github.ref_name }}.dmg
        asset_name: Running-Tray-${{ github.ref_name }}.dmg
        asset_content_type: application/x-apple-diskimage